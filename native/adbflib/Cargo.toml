[package]
edition = "2018"
name = "adbflib"
version = "0.1.33"
authors = ["Sven Kroemeke <skroemeke@gmail.com>"]
license = "MIT" # http://spdx.org/licenses/
repository = "https://github.com/electricherd/audiobookfinder"
readme = "README.md"
documentation = "https://electricherd.github.io/audiobookfinder/audiobookfinder/"
keywords = ["rust", "tui", "mdns", "libp2p", "webui", "websockets", "actix", "rayon", "id3tag", "http-server"]
publish = false
homepage = "https://github.com/electricherd/audiobookfinder"
description = "A program to collect information from audio books, gathered from multiple clients."

[badges]
appveyor = { repository = "audiobookfinder", branch = "master", service = "github" }
travis-ci = { repository = "electricherd/audiobookfinder", branch = "master" }
maintenance = { status = "actively-developed" }

[lib]
name = "adbfbinlib"
path = "src/lib.rs"
bench = true

[[bin]]
name = "audiobookfinder"
path = "src/main.rs"

# ################################################################################

[features]
default = ["cursive/crossterm-backend"]
system-alloc = []


[dependencies]
async-std = "1.6"     # great async
crossbeam = "0.7"     # a mpmc library also with Workgroup instead of std::thread::barrier
serde = "1.0"         # serialize anything, awesome for communication items
serde_derive = "1.0"  # macro usage from serde
ctrlc = "3.1"         # ctrl-c break events in main
exitcode = "1.1"      # for ctrlc exit codes
regex = "1.3"         # for html replacement

clap = "2.33"         # for the command line parsing
dirs = "3.0"          # to browse dirs fast in taglib
lazy_static = "1.4"   # awesome lib for lazy data structures

hostname = "^0.3"    # for host recognition
log = { version="0.4", features = ["release_max_level_off"]}    # basic log feature
env_logger = "0.7"     # alongside log for logging
flexi_logger = {version = "0.16", features = ["colors"] }  # a more flexible logger
syslog = "5.0"           # another logger for system log

futures = "0.3"     ####   # futures, used in state machine yet (and in many other crates)
futures-util = "0.3"

tree_magic_mini = "1.0"  # for faster file tree operations
mp4ameta = "0.4"       # for mp4 audio metadata
mp3-metadata = "0.3"
id3 = "0.5"              # id3 tags
metaflac = "0.2"

num_cpus = "1.13"   # addition to rayon for cpu count
rayon = "1.4"       # for multi-threading, very good

actix = "0.10"         # basic for webserver
actix-web = "3.0"     # for mini webserver and websocket
actix-files = "0.3"
actix-web-actors = "3.0"

get_if_addrs = "0.5"  # for range of localhosts

smlang = "0.3"        # state machine for client server communication for data exchange
serde_json = "1.0"    # couldn't find actix json to work, this is good and well documented
bincode = "1.3.1"     # for binary serialization

# libp2p network stack for secure p2p with mdns and general communication
libp2p = "0.28"
libp2p-core = "0.22"
libp2p-tcp = "0.22"
libp2p-noise = "0.24"

# cursive is the tui
[dependencies.cursive]
version = "0.15"
default-features = false

# https://doc.rust-lang.org/reference/conditional-compilation.html
# needed because github actions build is some other kind and breaks
# the build.
# important: has to be the same as used in "webbrowser" crate
[target.'cfg(any(target_os = "android", target_os = "windows", target_os = "macos", target_os = "linux", target_os = "freebsd", targest_os = "netbsd",target_os = "openbsd", target_os = "haiku", target_arch = "wasm32"))'.dependencies]
webbrowser = "0.5"
