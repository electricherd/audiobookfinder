var searchIndex = JSON.parse('{\
"adbfbinlib":{"doc":"The adbfbinlib is a LIB and a facade to many modules that …","i":[[0,"common","adbfbinlib","Common modules: common functionalities needed by the lib …",null,null],[0,"config","adbfbinlib::common","This module just holds as a collection of all modules …",null,null],[0,"net","adbfbinlib::common::config","The network related configurations",null,null],[7,"WEB_ADDR","adbfbinlib::common::config::net","",null,null],[7,"WEB_PORT_DEFAULT","","",null,null],[7,"WEB_PORT_MAX","","",null,null],[7,"WEB_PORT_MIN","","",null,null],[7,"VERSION","","",null,null],[7,"HOMEPAGE","","",null,null],[0,"tui","adbfbinlib::common::config","The TUI related configurations of a more general purpose",null,null],[7,"ALIVE_REFRESH_MSEC","adbfbinlib::common::config::tui","",null,null],[0,"webui","adbfbinlib::common::config","The webui related configurations",null,null],[0,"jquery","adbfbinlib::common::config::webui","",null,null],[3,"JS_JQUERY","adbfbinlib::common::config::webui::jquery","",null,null],[12,"__private_field","","",0,null],[0,"bootstrap","adbfbinlib::common::config::webui","",null,null],[3,"JS","adbfbinlib::common::config::webui::bootstrap","",null,null],[12,"__private_field","","",1,null],[3,"JS_MAP","","",null,null],[12,"__private_field","","",2,null],[3,"JS_MIN","","",null,null],[12,"__private_field","","",3,null],[3,"JS_MIN_MAP","","",null,null],[12,"__private_field","","",4,null],[3,"JS_BUNDLE","","",null,null],[12,"__private_field","","",5,null],[3,"JS_BUNDLE_MAP","","",null,null],[12,"__private_field","","",6,null],[3,"JS_BUNDLE_MIN","","",null,null],[12,"__private_field","","",7,null],[3,"JS_BUNDLE_MIN_MAP","","",null,null],[12,"__private_field","","",8,null],[3,"CSS","","",null,null],[12,"__private_field","","",9,null],[3,"CSS_MAP","","",null,null],[12,"__private_field","","",10,null],[3,"CSS_MIN","","",null,null],[12,"__private_field","","",11,null],[3,"CSS_MIN_MAP","","",null,null],[12,"__private_field","","",12,null],[3,"CSS_GRID","","",null,null],[12,"__private_field","","",13,null],[3,"CSS_GRID_MAP","","",null,null],[12,"__private_field","","",14,null],[3,"CSS_GRID_MIN","","",null,null],[12,"__private_field","","",15,null],[3,"CSS_GRID_MIN_MAP","","",null,null],[12,"__private_field","","",16,null],[3,"CSS_REBOOT","","",null,null],[12,"__private_field","","",17,null],[3,"CSS_REBOOT_MAP","","",null,null],[12,"__private_field","","",18,null],[3,"CSS_REBOOT_MIN","","",null,null],[12,"__private_field","","",19,null],[3,"CSS_REBOOT_MIN_MAP","","",null,null],[12,"__private_field","","",20,null],[3,"HTML_PAGE","adbfbinlib::common::config::webui","",null,null],[12,"__private_field","","",21,null],[3,"PEER_PAGE","","",null,null],[12,"__private_field","","",22,null],[3,"JS_APP","","",null,null],[12,"__private_field","","",23,null],[3,"JS_WS_EVENT_DISPATCHER","","",null,null],[12,"__private_field","","",24,null],[3,"FAVICON","","",null,null],[12,"__private_field","","",25,null],[3,"PIC_SHEEP","","",null,null],[12,"__private_field","","",26,null],[7,"HTML_REPLACE_STATIC_WEB_ADDR","","",null,null],[7,"HTML_REPLACE_STATIC_WEB_PORT","","",null,null],[7,"HTML_REPLACE_STATIC_URL_SOURCE","","",null,null],[7,"HTML_REPLACE_STATIC_LICENSE","","",null,null],[17,"LICENSE_NR","","",null,null],[3,"LICENSES","","",null,null],[12,"__private_field","","",27,null],[7,"HTML_REPLACER_BEGIN","","",null,null],[7,"HTML_REPLACER_END","","",null,null],[7,"HTML_REPLACE_HOSTNAME","","",null,null],[7,"HTML_REPLACE_PATHS_MAX","","",null,null],[7,"HTML_REPLACE_PEER_HASH","","",null,null],[7,"HTML_REPLACE_PEER_PAGE","","",null,null],[7,"HTML_REPLACE_VERSION","","",null,null],[7,"HTML_REPLACE_WEB_SOCKET","","",null,null],[0,"data","adbfbinlib::common::config","The data related configurations of a more general purpose",null,null],[7,"IGNORE_AUDIO_FORMATS","adbfbinlib::common::config::data","ignore those tree_magic extensions. like m3u",null,null],[7,"PATHS_MAX","","max of input paths/folders to be used by program",null,null],[0,"logit","adbfbinlib::common","This module lets us be more flexible with logging. It …",null,null],[4,"Log","adbfbinlib::common::logit","",null,null],[13,"Console","","",28,null],[13,"File","","",28,null],[13,"System","","",28,null],[3,"Logit","","The logger for all log-types: warn, info, trace, error, …",null,null],[11,"init","","",29,[[["log",4]]]],[5,"read_env_level","","Read env level given e.g. by command-line, environment …",null,[[],["log",4]]],[0,"paths","adbfbinlib::common","Holds common search paths implementations",null,null],[3,"SearchPath","adbfbinlib::common::paths","This struct holds the search paths, which can change …",null,null],[12,"paths","","",30,null],[11,"new","","Create a controlled SearchPath from a simple vector",30,[[["vec",3]]]],[11,"update","","",30,[[["vec",3],["string",3]]]],[11,"read","","",30,[[],[["string",3],["vec",3]]]],[11,"len","","",30,[[]]],[5,"clean_paths","","Clean paths checks that paths exists and that intersection…",null,[[["vec",3]],[["string",3],["vec",3]]]],[0,"ctrl","adbfbinlib","The ctrl module should be the general controller of the …",null,null],[0,"tui","adbfbinlib::ctrl","The TUI parts, greatly using Cursive showing table, the …",null,null],[3,"AliveState","adbfbinlib::ctrl::tui","",null,null],[12,"draw_char","","",31,null],[12,"runs","","",31,null],[3,"AliveDisplayData","","",null,null],[12,"host","","",32,null],[12,"paths","","",32,null],[4,"AliveSym","","",null,null],[13,"GoOn","","",33,null],[13,"Stop","","",33,null],[7,"RECT","","",null,null],[7,"SEPARATOR","","",null,null],[7,"STR_ALIVE","","",null,null],[7,"DEBUG_TEXT_ID","","",null,null],[7,"VIEW_LIST_ID","","",null,null],[7,"PATHS_PREFIX_ID","","",null,null],[7,"ID_HOST_INDEX","","",null,null],[7,"ID_HOST_NUMBER","","",null,null],[7,"ID_HOST_ALIVE","","",null,null],[3,"Tui","","The Tui wrapper holds cursive tui and the alive data of …",null,null],[12,"handle","","",34,null],[12,"alive","","",34,null],[11,"new","","Steps through cursive tui and if a message is received, …",34,[[["vec",3],["string",3]],[["result",4],["string",3]]]],[11,"refresh","","Refreshes the screen and returns if tui is shut down …",34,[[]]],[11,"run_cursive","","Steps through cursive tui and if a message is received, …",34,[[["sender",3],["receiver",3]]]],[11,"split_intelligently_ralign_vec","","Example test",34,[[["vec",3]],[["string",3],["vec",3]]]],[11,"split_intelligently_ralign","","",34,[[["string",3]],["string",3]]],[11,"toggle_alive","","Toggle the alive signal by changing the data inside …",34,[[["alivesym",4],["collectionpathalive",4]]]],[11,"build_tui","","Builds up the whole cursive tui: views, lists, etc. Net …",34,[[["vec",3],["string",3]],[["result",4],["cursive",3],["string",3]]]],[0,"webui","adbfbinlib::ctrl","This is a webui about to replace the TUI, to be nice, …",null,null],[0,"actors","adbfbinlib::ctrl::webui","",null,null],[3,"MSyncStartup","adbfbinlib::ctrl::webui::actors","",null,null],[3,"MDoneSyncStartup","","",null,null],[3,"ActorSyncStartup","","Secure ActorSyncStartup by an Option and consume it fast!",null,null],[12,"startup_sync","","",35,null],[12,"inform_to","","",35,null],[11,"new","","",35,[[["actorwsservermonitor",3],["waitgroup",3],["addr",3]]]],[3,"MRegisterWSClient","","",null,null],[12,"addr","","",36,null],[3,"MServerEvent","","",null,null],[12,"event","","",37,null],[3,"ActorWSServerMonitor","","Monitors all connected websockets, and therefore …",null,null],[12,"receiver","","",38,null],[12,"listeners","","",38,null],[12,"paths","","",38,null],[11,"register","","",38,[[["mregisterwsclient",3]]]],[3,"ActorWebSocket","","websocket connection is long running connection, it easier…",null,null],[12,"starter","","",39,null],[12,"paths","","",39,null],[0,"json","adbfbinlib::ctrl::webui","",null,null],[5,"convert_internal_message","adbfbinlib::ctrl::webui::json","some internal shall fail because they are not supposed to …",null,[[["internaluimsg",4]],[["result",4],["wsjsonout",4],["string",3]]]],[5,"convert_external_message","","",null,[[],[["wsjsonin",4],["string",3],["result",4]]]],[5,"generate_init_data","","",null,[[["vec",3]],["wsjsonout",4]]],[5,"REST_dirs","","generate the REST dir paths to output json",null,[[["vec",3]],["wsjsonout",4]]],[4,"RefreshData","","",null,null],[13,"path","","",40,null],[12,"nr","adbfbinlib::ctrl::webui::json::RefreshData","",41,null],[13,"net","adbfbinlib::ctrl::webui::json","",40,null],[4,"AnimateData","","",null,null],[13,"cnt","","",42,null],[3,"PathData","","",null,null],[12,"nr","","",43,null],[12,"name","","",43,null],[3,"StartData","","",null,null],[12,"paths","","",44,null],[3,"PeerJson","","",null,null],[12,"id","","",45,null],[12,"addr","","",45,null],[3,"FinishPeer","","",null,null],[12,"peer","","",46,null],[12,"data","","",46,null],[4,"NetData","","",null,null],[13,"add","","",47,null],[13,"remove","","",47,null],[13,"finished","","",47,null],[3,"DirOut","","",null,null],[12,"nr","","",48,null],[12,"dirs","","",48,null],[4,"WSJsonOut","","",null,null],[13,"refresh","","",49,null],[13,"searching","","",49,null],[13,"start","","",49,null],[13,"update","","",49,null],[13,"rest_dirs","","",49,null],[13,"init_paths","","",49,null],[13,"nothing","","",49,null],[3,"DirIn","","",null,null],[12,"nr","","",50,null],[12,"dir","","",50,null],[4,"WSJsonIn","","",null,null],[13,"ready","","",51,null],[13,"rest_dir","","",51,null],[13,"start","","",51,null],[0,"pages","adbfbinlib::ctrl::webui","",null,null],[5,"single_page","adbfbinlib::ctrl::webui::pages","",null,[[["data",3],["arc",3]]]],[5,"bootstrap_css","","",null,[[["path",3],["string",3]]]],[5,"bootstrap_js","","",null,[[["path",3],["string",3]]]],[5,"js_app","","",null,[[["data",3],["arc",3]]]],[5,"replace_static_content","","",null,[[["peerrepresentation",6]],["string",3]]],[3,"ReplaceStatic","","",null,null],[12,"r","","",52,null],[12,"c","","",52,null],[5,"linear_LUT_replacer","","",null,[[],["string",3]]],[3,"HTMLReplacer","","",null,null],[12,"changers","","",53,null],[11,"new","","",53,[[]]],[0,"rest_mod","adbfbinlib::ctrl::webui","",null,null],[5,"return_directory","adbfbinlib::ctrl::webui::rest_mod","",null,[[["string",3]],[["string",3],["vec",3]]]],[3,"WebServerState","adbfbinlib::ctrl::webui","Data of the webserver",null,null],[12,"id","","",54,null],[12,"nr_connections","","",54,null],[12,"web_port","","",54,null],[3,"WebUI","","WebUI keep data",null,null],[12,"id","","",55,null],[12,"paths","","",55,null],[12,"serve_others","","",55,null],[11,"new","","",55,[[["arc",3],["peerrepresentation",6],["mutex",3]]]],[11,"run","","",55,[[["internaluimsg",4],["receiver",3],["waitgroup",3]]]],[11,"websocket_answer","","",55,[[["arc",3],["data",3],["httprequest",3],["payload",3],["arc",3],["data",3],["data",3],["arc",3]]]],[4,"CollectionPathAlive","adbfbinlib::ctrl","alive Signal for path from collector or net search alive",null,null],[13,"BusyPath","","",56,null],[13,"HostSearch","","",56,null],[4,"Status","","Turn on/off something",null,null],[13,"ON","","",57,null],[13,"OFF","","",57,null],[4,"NetInfoMsg","","Yet unimportant net messages todo: make it better!",null,null],[13,"Debug","","",58,null],[13,"ShowStats","","",58,null],[12,"show","adbfbinlib::ctrl::NetInfoMsg","",59,null],[3,"UiClientPeer","adbfbinlib::ctrl","Peer string identificators",null,null],[12,"id","","",60,null],[12,"addresses","","",60,null],[4,"ForwardNetMsg","","Forwarding net messages",null,null],[13,"Add","","",61,null],[13,"Delete","","",61,null],[13,"Stats","","",61,null],[4,"InternalUiMsg","","Internal messages inside UI",null,null],[13,"Update","","",62,null],[13,"StartAnimate","","",62,null],[13,"StepAndAnimate","","",62,null],[13,"PeerSearchFinished","","",62,null],[13,"Terminate","","",62,null],[4,"UiUpdateMsg","","UI updating messages",null,null],[13,"NetUpdate","","",63,null],[13,"CollectionUpdate","","",63,null],[13,"PeerSearchFinished","","",63,null],[13,"StopUI","","",63,null],[3,"NetStatsMsg","","NetStats message",null,null],[12,"line","","",64,null],[12,"max","","",64,null],[4,"Finisher","","",null,null],[13,"TUI","","",65,null],[13,"WEBUI","","",65,null],[3,"Ctrl","","The controller holds user interfaces as webui, tui. It …",null,null],[12,"peer_id","","",66,null],[12,"paths","","",66,null],[12,"with_net","","",66,null],[11,"new","","Create a new controller if everything fits.",66,[[["arc",3],["peerid",3],["mutex",3]]]],[11,"run","","Create a new controller if everything fits.",66,[[["arc",3],["peerid",3],["mutex",3],["waitgroup",3],["creceiver",3],["uiupdatemsg",4]],[["error",3],["result",4]]]],[11,"spawn_webui","","",66,[[["internaluimsg",4],["arc",3],["finisher",4],["mutex",3],["sender",3],["receiver",3],["waitgroup",3]],[["error",3],["result",4],["joinhandle",3]]]],[11,"spawn_tui","","",66,[[["sender",3],["mutex",3],["sender",3],["internaluimsg",4],["arc",3],["finisher",4],["receiver",3],["waitgroup",3]],[["error",3],["result",4],["joinhandle",3]]]],[11,"spawn_message_loop","","",66,[[["vec",3],["sender",3],["creceiver",3],["uiupdatemsg",4]],[["error",3],["joinhandle",3],["result",4]]]],[11,"run_tui","","Run the UIs - there is less controlling rather than …",66,[[["internaluimsg",4],["string",3],["sender",3],["receiver",3],["vec",3]],[["result",4],["string",3]]]],[11,"run_webui","","Run the controller",66,[[["internaluimsg",4],["arc",3],["peerrepresentation",6],["mutex",3],["receiver",3],["waitgroup",3]],["result",6]]],[11,"run_message_forwarding","","This basically wraps incoming UiUpdateMsg to InternalUiMsg…",66,[[["vec",3],["creceiver",3]]]],[5,"try_open_browser","","",null,[[]]],[0,"data","adbfbinlib","The oldest module, the data module stores all the data …",null,null],[0,"audio_info","adbfbinlib::data","Wraps bktree functionality, the container and defines …",null,null],[3,"Container","adbfbinlib::data::audio_info","The container keeps the collection data. It currently …",null,null],[12,"bk_tree","","",67,null],[11,"new","","",67,[[]]],[11,"find","","wraps and protects the bktree find but with AudioInfoKey",67,[[["audioinfokey",3]]]],[11,"insert","","wraps and protects the bktree insert but with AudioInfoKey",67,[[["box",3],["audioinfokey",3],["audioinfo",3]]]],[11,"flush","","",67,[[],["vec",3]]],[3,"AudioInfoKey","","",null,null],[12,"k","","",68,null],[3,"AudioInfo","","",null,null],[12,"duration","","",69,null],[12,"album","","",69,null],[12,"file_name","","",69,null],[11,"new","","Creates from the given input a key! The idea is to get a …",68,[[["string",3]]]],[11,"get","","",68,[[],["string",3]]],[0,"bktree","adbfbinlib::data","",null,null],[3,"BKTree","adbfbinlib::data::bktree","BKTree structure that is used to store word like …",null,null],[12,"root","","",70,null],[11,"new","","Create a new BK Tree with an empty root.",70,[[],["bktree",3]]],[11,"new_from_vec","","Create a new tree from the items in a Vector. Useful for …",70,[[["vec",3]],["bktree",3]]],[11,"insert","","Add a new (key, value) pair into the BKTree.",70,[[]]],[11,"find","","Search for the closest Item to the key with a given …",70,[[]]],[11,"dfs","","",70,[[],["vec",3]]],[3,"BKTreeNode","","",null,null],[12,"key","","",71,null],[12,"value","","",71,null],[12,"children","","",71,null],[11,"new","","Create a new BK Tree Node with the given (K, V) pair and …",71,[[]]],[11,"insert","","Insert a new (key, value) pair into this nodes children",71,[[]]],[11,"find","","Find a key in the given childrens nodes",71,[[]]],[11,"traverse","","",71,[[["vec",3]]]],[8,"Distance","","This trait is used by the BKTree to determine the …",null,null],[10,"distance","","Used to determine the \\\"distance\\\" between two objects.",72,[[]]],[5,"osa_distance","","",null,[[]]],[0,"collection","adbfbinlib::data","The collection keeps and maintains all audio data.",null,null],[7,"TOLERANCE","adbfbinlib::data::collection","",null,null],[7,"ID3_CAPACITY","","distance of Levenshtein-algorithm",null,null],[3,"Collection","","capacity to read small portion of file Collection keeps …",null,null],[12,"stats","","This collection contains all data",73,null],[3,"FilesStat","","Only some statistics",null,null],[12,"analyzed","","",74,null],[12,"faulty","","",74,null],[12,"searched","","",74,null],[12,"other","","",74,null],[12,"duplicates","","",74,null],[11,"add","","Adds stats from one to the other, used for combining …",74,[[["filesstat",3]]]],[3,"Stats","","",null,null],[12,"memory","","",75,null],[12,"files","","",75,null],[6,"FileFn","","",null,null],[11,"new","","Sets up the whole collection that books all threads.",73,[[],["collection",3]]],[11,"memory","","Return memory usage",73,[[]]],[11,"visit_path","","The function that runs from a given path",73,[[["smutex",3],["fn",8],["sarc",3],["path",3]],[["filesstat",3],["result",6]]]],[11,"visit_files","","the function to check all files separately",73,[[["smutex",3],["direntry",3],["sarc",3],["collection",3],["filesstat",3]],["result",6]]],[11,"visit_audio_files","","Check the file and retrieve the meta-data info",73,[[["smutex",3],["sarc",3],["filesstat",3],["path",3]],["result",4]]],[11,"print_stats","","",73,[[["peerid",3]]]],[11,"analyze_tag","","",73,[[["smutex",3],["sarc",3],["commonaudioinfo",3],["filesstat",3],["string",3]]]],[0,"ipc","adbfbinlib::data","IPC module will hold all massive (that is why IPC) …",null,null],[3,"IFCollectionOutputData","adbfbinlib::data::ipc","",null,null],[12,"nr_searched_files","","",76,null],[12,"nr_found_songs","","",76,null],[12,"nr_internal_duplicates","","",76,null],[12,"size_of_data_in_kb","","",76,null],[11,"from","","",76,[[["ifinternalcollectionoutputdata",3]]]],[4,"IPC","","",null,null],[13,"DoneSearching","","",77,null],[13,"PublishSingleAudioDataRecord","","",77,null],[0,"tag_readers","adbfbinlib::data","",null,null],[3,"CommonAudioInfo","adbfbinlib::data::tag_readers","",null,null],[12,"title","","",78,null],[12,"artist","","",78,null],[12,"duration","","",78,null],[12,"album","","",78,null],[12,"track","","",78,null],[12,"album_artist","","",78,null],[12,"genre","","",78,null],[12,"disc","","",78,null],[12,"total_discs","","",78,null],[12,"total_tracks","","",78,null],[12,"year","","",78,null],[8,"TagReader","","Trait to ensure same calls",null,null],[10,"read_tag_from","","",79,[[["bufreader",3]],[["commonaudioinfo",3],["string",3],["result",4]]]],[10,"known_suffixes","","",79,[[],["vec",3]]],[3,"MP4TagReader","","",null,null],[3,"ID3TagReader","","",null,null],[3,"FlacTagReader","","",null,null],[3,"MP3TagReader","","",null,null],[3,"IFInternalCollectionOutputData","adbfbinlib::data","Interface of what collection output data will return",null,null],[12,"nr_searched_files","","",80,null],[12,"nr_found_songs","","",80,null],[12,"nr_internal_duplicates","","",80,null],[11,"new","","",80,[[]]],[5,"search_in_single_path","","The collection search! Searches on the file system a …",null,[[["mutex",3],["arc",3],["arc",3],["mutex",3],["arc",3],["mutex",3]],["ifinternalcollectionoutputdata",3]]],[5,"publish_local_storage","","",null,[[["arc",3],["ipc",4],["sender",3],["mutex",3]]]],[0,"forwarder","adbfbinlib","The forwarder module shall act as wrapper for the ffi …",null,null],[3,"NET_RUNTIME","adbfbinlib::forwarder","A static mutable runtime for all network activity (sender …",null,null],[12,"__private_field","","",81,null],[3,"NET_UI","","A static mutable data collection, its inside to be sent …",null,null],[12,"__private_field","","",82,null],[5,"ffi_file_count_good","","Return the number of audio files found for now",null,[[["vec",3],["string",3]]]],[5,"ffi_ui_messages_as_json","","Return the json of peer uis which holds a vector of …",null,[[]]],[5,"create_net_runtime","","Opens a net thread and return ui message receiver and ipc …",null,[[]]],[3,"UIListInner","","Struct viewable for ffi inner part and used as json export…",null,null],[12,"peerid","","",83,null],[12,"finished","","",83,null],[12,"searched","","",83,null],[3,"UIList","","Container and helper to fill UIListInner easier",null,null],[12,"cnt","","",84,null],[11,"add_peer","","",84,[[["peerid",3]]]],[11,"remove_peer","","",84,[[["peerid",3]]]],[11,"add_search_finished","","",84,[[["peerid",3],["ifcollectionoutputdata",3]]]],[0,"net","adbfbinlib","The net module is resonsible for the network related …",null,null],[0,"behavior","adbfbinlib::net","The net will be represented by a swarm as in libp2p …",null,null],[3,"AdbfBehavior","adbfbinlib::net::behavior","The swarm injected behavior is the key element for the …",null,null],[12,"kademlia","","",85,null],[12,"mdns","","",85,null],[12,"sm_behaviour","","",85,null],[12,"storage","","",85,null],[5,"build_noise_transport","","Build up the transport layer",null,[[["keypair",4],["option",4],["presharedkey",3]],["boxed",3]]],[11,"check_new_peer_actions","","",85,[[["peerid",3]]]],[0,"sm","adbfbinlib::net","The StateChart for the server ... StateMachine …",null,null],[3,"Go","adbfbinlib::net::sm","",null,null],[3,"StartData","","",null,null],[12,"own_address","","",86,null],[3,"NewPeerData","","",null,null],[12,"id","","",87,null],[12,"addr","","",87,null],[3,"UpdateData","","",null,null],[12,"id","","",88,null],[12,"data","","",88,null],[8,"StateMachineContext","","This trait outlines the guards and actions that need to …",null,null],[10,"is_allowed","","",89,[[["updatedata",3]]]],[10,"known","","",89,[[["peerid",3]]]],[10,"not_known","","",89,[[["newpeerdata",3]]]],[10,"update_peer","","",89,[[["updatedata",3]]]],[10,"remove_peer","","",89,[[["peerid",3]]]],[10,"process_new_peer","","",89,[[["newpeerdata",3]]]],[4,"States","","List of auto-generated states.",null,null],[13,"Start","","",90,null],[13,"WaitingForPeerAction","","",90,null],[4,"Events","","List of auto-generated events.",null,null],[13,"Go","","",91,null],[13,"GotANewPeer","","",91,null],[13,"HaveToRemovePeer","","",91,null],[13,"UpdatePeer","","",91,null],[4,"Error","","List of possible errors",null,null],[13,"InvalidEvent","","When an event is processed which should not come in the …",92,null],[13,"GuardFailed","","When an event is processed whose guard did not return <code>true</code>…",92,null],[3,"StateMachine","","State machine structure definition.",null,null],[12,"state","","",93,null],[12,"context","","",93,null],[11,"new","","Creates a new state machine with the specified starting …",93,[[]]],[11,"state","","Returns the current state.",93,[[],["states",4]]],[11,"context","","Returns the current context.",93,[[]]],[11,"context_mut","","Returns the current context as a mutable reference.",93,[[]]],[11,"process_event","","Process an event.",93,[[["events",4]],[["error",4],["result",4],["states",4]]]],[3,"AdbfStateChart","","",null,null],[12,"ui_data","","",94,null],[11,"new","","",94,[[["uidata",3]]]],[11,"init","","",94,[[],[["statemachine",3],["adbfstatechart",3]]]],[0,"sm_behaviour","adbfbinlib::net","Taken from dummy behaviour to have a layer of …",null,null],[4,"sm_to_net","adbfbinlib::net::sm_behaviour","",null,null],[13,"FoundNewPeer","","",95,null],[4,"SMOutEvents","","Events going from StateMachine back to the net behavior",null,null],[13,"ForwardSM","","",96,null],[13,"ForwardIPC","","",96,null],[3,"SMBehaviour","","",null,null],[12,"sm","","",97,null],[12,"own_peer","","",97,null],[12,"send_buffer","","",97,null],[12,"ipc_receiver","","",97,null],[11,"new","","",97,[[["peerid",3],["uidata",3],["receiver",3],["ipc",4]]]],[11,"own_peer","","",97,[[],["peerid",3]]],[11,"mdns_new_peer","","",97,[[["multiaddr",3],["peerid",3]]]],[11,"mdns_remove","","",97,[[["peerid",3]]]],[11,"update_peer_data","","",97,[[["ifcollectionoutputdata",3],["peerid",3]]]],[11,"process_and_react","","",97,[[["events",4]]]],[0,"storage","adbfbinlib::net","wraps up \\\"net storage\\\" which is implementing the kademlia …",null,null],[4,"MkadKeys","adbfbinlib::net::storage","",null,null],[13,"KeyForPeerFinished","","",98,null],[13,"SingleAudioRecord","","",98,null],[3,"NetStorage","","Capsulates NetStorage activity internally using Kademlia.",null,null],[12,"nr_peers","","",99,null],[11,"new","","",99,[[]]],[11,"inc","","",99,[[]]],[11,"dec","","",99,[[]]],[11,"peers","","",99,[[]]],[11,"write_ipc","","",99,[[["kademlia",3],["ipc",4]]]],[11,"check_if_peer_finished","","Looks into kademlia data and returns if already finished …",99,[[["kademlia",3],["peerid",3]],[["ifcollectionoutputdata",3],["result",4]]]],[11,"on_retrieve","","",99,[[["kademliaevent",4]]]],[11,"key_writer","","",99,[[["mkadkeys",4]],["key",3]]],[11,"retrieve_record","","",99,[[["key",3],["vec",3]]]],[11,"key_reader","","",99,[[["key",3]],[["box",3],["result",4],["mkadkeys",4]]]],[11,"get_data_finished","","",99,[[["kademlia",3],["mkadkeys",4]],[["ifcollectionoutputdata",3],["result",4]]]],[0,"subs","adbfbinlib::net","A folder/module for helper/sub modules",null,null],[0,"key_keeper","adbfbinlib::net::subs","A component to use secure communication using keys. It is …",null,null],[5,"get_p2p_server_id","adbfbinlib::net::subs::key_keeper","Gets a newly generated server ID",null,[[],["peerid",3]]],[3,"SERVER_KEY","","Generates a new ed25519 key-pair",null,null],[12,"__private_field","","",100,null],[3,"PRESHARED_SECRET","","This is the to be hidden/read preshare key for the net …",null,null],[12,"__private_field","","",101,null],[0,"peer_representation","adbfbinlib::net::subs","Holds the peer representation, which is a hash of the …",null,null],[6,"PeerRepresentation","adbfbinlib::net::subs::peer_representation","Since peer lacks some functionality, PeerRepresentation …",null,null],[5,"peer_to_hash","","Return PeerRepresentation directly from PeerId",null,[[["peerid",3]],["peerrepresentation",6]]],[5,"peer_to_hash_string","","Return a hex string hash representation of PeerId",null,[[["peerid",3]],["string",3]]],[5,"peer_hash_to_string","","Return a hex string hash reprentation of pure peer …",null,[[["peerrepresentation",6]],["string",3]]],[0,"ui_data","adbfbinlib::net","a very small mod just for ui data send by net. It is …",null,null],[3,"UiData","adbfbinlib::net::ui_data","",null,null],[12,"sender","","",102,null],[12,"ui_shown_peers","","",102,null],[11,"new","","",102,[[["option",4],["sender",3]]]],[11,"has_peer","","",102,[[["peerid",3]]]],[11,"register_address","","",102,[[["multiaddr",3],["peerid",3]]]],[11,"unregister_address","","",102,[[["peerid",3]]]],[11,"update_peer_data","","",102,[[["updatedata",3]]]],[3,"Net","adbfbinlib::net","The Net component keeps control about everything from net.",null,null],[11,"lookup","","Lookup yet is the start of the networking. It looks for …",103,[[["ipc",4],["option",4],["receiver",3],["sender",3]]]],[11,"build_swarm_and_run","","Discovers mdns on the net and should have a whole process …",103,[[["option",4],["ipc",4],["receiver",3],["peerid",3],["sender",3]]]],[0,"shared","adbfbinlib","The shared module shall give binary and library high …",null,null],[5,"collection_search","adbfbinlib::shared","High level function to search path",null,[[["arc",3],["mutex",3],["mutex",3],["mutex",3],["arc",3],["arc",3]],["ifinternalcollectionoutputdata",3]]],[5,"net_search","","High level function to startup net functionality",null,[[["sender",3],["option",4],["ipc",4],["waitgroup",3],["receiver",3]]]],[3,"AdbflibError","adbfbinlib","A useless Error just for the Demo",null,null],[5,"file_count_good","","the library interface for returning number of audio files …",null,[[["vec",3],["string",3]]]],[5,"get_own_peer","","the library interface for returning own peer id",null,[[]]],[5,"get_ui_messages","","the library interface for returning ui messages",null,[[]]],[11,"from","adbfbinlib::common::config::webui::jquery","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"init","","",0,[[]]],[11,"deref","","",0,[[]]],[11,"deref_mut","","",0,[[]]],[11,"drop","","",0,[[]]],[11,"from","adbfbinlib::common::config::webui::bootstrap","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"init","","",1,[[]]],[11,"deref","","",1,[[]]],[11,"deref_mut","","",1,[[]]],[11,"drop","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"init","","",2,[[]]],[11,"deref","","",2,[[]]],[11,"deref_mut","","",2,[[]]],[11,"drop","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"init","","",3,[[]]],[11,"deref","","",3,[[]]],[11,"deref_mut","","",3,[[]]],[11,"drop","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"init","","",4,[[]]],[11,"deref","","",4,[[]]],[11,"deref_mut","","",4,[[]]],[11,"drop","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"init","","",5,[[]]],[11,"deref","","",5,[[]]],[11,"deref_mut","","",5,[[]]],[11,"drop","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"init","","",6,[[]]],[11,"deref","","",6,[[]]],[11,"deref_mut","","",6,[[]]],[11,"drop","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"init","","",7,[[]]],[11,"deref","","",7,[[]]],[11,"deref_mut","","",7,[[]]],[11,"drop","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"init","","",8,[[]]],[11,"deref","","",8,[[]]],[11,"deref_mut","","",8,[[]]],[11,"drop","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"init","","",9,[[]]],[11,"deref","","",9,[[]]],[11,"deref_mut","","",9,[[]]],[11,"drop","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"init","","",10,[[]]],[11,"deref","","",10,[[]]],[11,"deref_mut","","",10,[[]]],[11,"drop","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"init","","",11,[[]]],[11,"deref","","",11,[[]]],[11,"deref_mut","","",11,[[]]],[11,"drop","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"init","","",12,[[]]],[11,"deref","","",12,[[]]],[11,"deref_mut","","",12,[[]]],[11,"drop","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"init","","",13,[[]]],[11,"deref","","",13,[[]]],[11,"deref_mut","","",13,[[]]],[11,"drop","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"init","","",14,[[]]],[11,"deref","","",14,[[]]],[11,"deref_mut","","",14,[[]]],[11,"drop","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"init","","",15,[[]]],[11,"deref","","",15,[[]]],[11,"deref_mut","","",15,[[]]],[11,"drop","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"init","","",16,[[]]],[11,"deref","","",16,[[]]],[11,"deref_mut","","",16,[[]]],[11,"drop","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"init","","",17,[[]]],[11,"deref","","",17,[[]]],[11,"deref_mut","","",17,[[]]],[11,"drop","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"init","","",18,[[]]],[11,"deref","","",18,[[]]],[11,"deref_mut","","",18,[[]]],[11,"drop","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"init","","",19,[[]]],[11,"deref","","",19,[[]]],[11,"deref_mut","","",19,[[]]],[11,"drop","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"init","","",20,[[]]],[11,"deref","","",20,[[]]],[11,"deref_mut","","",20,[[]]],[11,"drop","","",20,[[]]],[11,"from","adbfbinlib::common::config::webui","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"init","","",21,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"drop","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"init","","",22,[[]]],[11,"deref","","",22,[[]]],[11,"deref_mut","","",22,[[]]],[11,"drop","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"init","","",23,[[]]],[11,"deref","","",23,[[]]],[11,"deref_mut","","",23,[[]]],[11,"drop","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"init","","",24,[[]]],[11,"deref","","",24,[[]]],[11,"deref_mut","","",24,[[]]],[11,"drop","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"init","","",25,[[]]],[11,"deref","","",25,[[]]],[11,"deref_mut","","",25,[[]]],[11,"drop","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"init","","",26,[[]]],[11,"deref","","",26,[[]]],[11,"deref_mut","","",26,[[]]],[11,"drop","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"init","","",27,[[]]],[11,"deref","","",27,[[]]],[11,"deref_mut","","",27,[[]]],[11,"drop","","",27,[[]]],[11,"from","adbfbinlib::common::logit","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"init","","",28,[[]]],[11,"deref","","",28,[[]]],[11,"deref_mut","","",28,[[]]],[11,"drop","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"init","","",29,[[]]],[11,"deref","","",29,[[]]],[11,"deref_mut","","",29,[[]]],[11,"drop","","",29,[[]]],[11,"from","adbfbinlib::common::paths","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"init","","",30,[[]]],[11,"deref","","",30,[[]]],[11,"deref_mut","","",30,[[]]],[11,"drop","","",30,[[]]],[11,"from","adbfbinlib::ctrl::tui","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"init","","",31,[[]]],[11,"deref","","",31,[[]]],[11,"deref_mut","","",31,[[]]],[11,"drop","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"init","","",32,[[]]],[11,"deref","","",32,[[]]],[11,"deref_mut","","",32,[[]]],[11,"drop","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"init","","",33,[[]]],[11,"deref","","",33,[[]]],[11,"deref_mut","","",33,[[]]],[11,"drop","","",33,[[]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"init","","",34,[[]]],[11,"deref","","",34,[[]]],[11,"deref_mut","","",34,[[]]],[11,"drop","","",34,[[]]],[11,"from","adbfbinlib::ctrl::webui::actors","",104,[[]]],[11,"into","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"vzip","","",104,[[]]],[11,"init","","",104,[[]]],[11,"deref","","",104,[[]]],[11,"deref_mut","","",104,[[]]],[11,"drop","","",104,[[]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"vzip","","",105,[[]]],[11,"init","","",105,[[]]],[11,"deref","","",105,[[]]],[11,"deref_mut","","",105,[[]]],[11,"drop","","",105,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"init","","",35,[[]]],[11,"deref","","",35,[[]]],[11,"deref_mut","","",35,[[]]],[11,"drop","","",35,[[]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"init","","",36,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"drop","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"init","","",37,[[]]],[11,"deref","","",37,[[]]],[11,"deref_mut","","",37,[[]]],[11,"drop","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"init","","",38,[[]]],[11,"deref","","",38,[[]]],[11,"deref_mut","","",38,[[]]],[11,"drop","","",38,[[]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"init","","",39,[[]]],[11,"deref","","",39,[[]]],[11,"deref_mut","","",39,[[]]],[11,"drop","","",39,[[]]],[11,"from","adbfbinlib::ctrl::webui::json","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"init","","",40,[[]]],[11,"deref","","",40,[[]]],[11,"deref_mut","","",40,[[]]],[11,"drop","","",40,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"init","","",42,[[]]],[11,"deref","","",42,[[]]],[11,"deref_mut","","",42,[[]]],[11,"drop","","",42,[[]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"init","","",43,[[]]],[11,"deref","","",43,[[]]],[11,"deref_mut","","",43,[[]]],[11,"drop","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"init","","",44,[[]]],[11,"deref","","",44,[[]]],[11,"deref_mut","","",44,[[]]],[11,"drop","","",44,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"init","","",45,[[]]],[11,"deref","","",45,[[]]],[11,"deref_mut","","",45,[[]]],[11,"drop","","",45,[[]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"init","","",46,[[]]],[11,"deref","","",46,[[]]],[11,"deref_mut","","",46,[[]]],[11,"drop","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"init","","",47,[[]]],[11,"deref","","",47,[[]]],[11,"deref_mut","","",47,[[]]],[11,"drop","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"init","","",48,[[]]],[11,"deref","","",48,[[]]],[11,"deref_mut","","",48,[[]]],[11,"drop","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"to_string","","",49,[[],["string",3]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"init","","",49,[[]]],[11,"deref","","",49,[[]]],[11,"deref_mut","","",49,[[]]],[11,"drop","","",49,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"init","","",50,[[]]],[11,"deref","","",50,[[]]],[11,"deref_mut","","",50,[[]]],[11,"drop","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"init","","",51,[[]]],[11,"deref","","",51,[[]]],[11,"deref_mut","","",51,[[]]],[11,"drop","","",51,[[]]],[11,"from","adbfbinlib::ctrl::webui::pages","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"init","","",52,[[]]],[11,"deref","","",52,[[]]],[11,"deref_mut","","",52,[[]]],[11,"drop","","",52,[[]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"init","","",53,[[]]],[11,"deref","","",53,[[]]],[11,"deref_mut","","",53,[[]]],[11,"drop","","",53,[[]]],[11,"from","adbfbinlib::ctrl::webui","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"vzip","","",54,[[]]],[11,"init","","",54,[[]]],[11,"deref","","",54,[[]]],[11,"deref_mut","","",54,[[]]],[11,"drop","","",54,[[]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"vzip","","",55,[[]]],[11,"init","","",55,[[]]],[11,"deref","","",55,[[]]],[11,"deref_mut","","",55,[[]]],[11,"drop","","",55,[[]]],[11,"from","adbfbinlib::ctrl","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"vzip","","",56,[[]]],[11,"init","","",56,[[]]],[11,"deref","","",56,[[]]],[11,"deref_mut","","",56,[[]]],[11,"drop","","",56,[[]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"vzip","","",57,[[]]],[11,"init","","",57,[[]]],[11,"deref","","",57,[[]]],[11,"deref_mut","","",57,[[]]],[11,"drop","","",57,[[]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"vzip","","",58,[[]]],[11,"init","","",58,[[]]],[11,"deref","","",58,[[]]],[11,"deref_mut","","",58,[[]]],[11,"drop","","",58,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"init","","",60,[[]]],[11,"deref","","",60,[[]]],[11,"deref_mut","","",60,[[]]],[11,"drop","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"vzip","","",61,[[]]],[11,"init","","",61,[[]]],[11,"deref","","",61,[[]]],[11,"deref_mut","","",61,[[]]],[11,"drop","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"vzip","","",62,[[]]],[11,"init","","",62,[[]]],[11,"deref","","",62,[[]]],[11,"deref_mut","","",62,[[]]],[11,"drop","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"vzip","","",63,[[]]],[11,"init","","",63,[[]]],[11,"deref","","",63,[[]]],[11,"deref_mut","","",63,[[]]],[11,"drop","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"vzip","","",64,[[]]],[11,"init","","",64,[[]]],[11,"deref","","",64,[[]]],[11,"deref_mut","","",64,[[]]],[11,"drop","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"vzip","","",65,[[]]],[11,"init","","",65,[[]]],[11,"deref","","",65,[[]]],[11,"deref_mut","","",65,[[]]],[11,"drop","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"vzip","","",66,[[]]],[11,"init","","",66,[[]]],[11,"deref","","",66,[[]]],[11,"deref_mut","","",66,[[]]],[11,"drop","","",66,[[]]],[11,"from","adbfbinlib::data::audio_info","",67,[[]]],[11,"into","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"init","","",67,[[]]],[11,"deref","","",67,[[]]],[11,"deref_mut","","",67,[[]]],[11,"drop","","",67,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"vzip","","",68,[[]]],[11,"init","","",68,[[]]],[11,"deref","","",68,[[]]],[11,"deref_mut","","",68,[[]]],[11,"drop","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"vzip","","",69,[[]]],[11,"init","","",69,[[]]],[11,"deref","","",69,[[]]],[11,"deref_mut","","",69,[[]]],[11,"drop","","",69,[[]]],[11,"from","adbfbinlib::data::bktree","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"vzip","","",70,[[]]],[11,"init","","",70,[[]]],[11,"deref","","",70,[[]]],[11,"deref_mut","","",70,[[]]],[11,"drop","","",70,[[]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"init","","",71,[[]]],[11,"deref","","",71,[[]]],[11,"deref_mut","","",71,[[]]],[11,"drop","","",71,[[]]],[11,"from","adbfbinlib::data::collection","",73,[[]]],[11,"into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"init","","",73,[[]]],[11,"deref","","",73,[[]]],[11,"deref_mut","","",73,[[]]],[11,"drop","","",73,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"init","","",74,[[]]],[11,"deref","","",74,[[]]],[11,"deref_mut","","",74,[[]]],[11,"drop","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"init","","",75,[[]]],[11,"deref","","",75,[[]]],[11,"deref_mut","","",75,[[]]],[11,"drop","","",75,[[]]],[11,"from","adbfbinlib::data::ipc","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"vzip","","",76,[[]]],[11,"init","","",76,[[]]],[11,"deref","","",76,[[]]],[11,"deref_mut","","",76,[[]]],[11,"drop","","",76,[[]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"vzip","","",77,[[]]],[11,"init","","",77,[[]]],[11,"deref","","",77,[[]]],[11,"deref_mut","","",77,[[]]],[11,"drop","","",77,[[]]],[11,"from","adbfbinlib::data::tag_readers","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"vzip","","",78,[[]]],[11,"init","","",78,[[]]],[11,"deref","","",78,[[]]],[11,"deref_mut","","",78,[[]]],[11,"drop","","",78,[[]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"vzip","","",106,[[]]],[11,"init","","",106,[[]]],[11,"deref","","",106,[[]]],[11,"deref_mut","","",106,[[]]],[11,"drop","","",106,[[]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"vzip","","",107,[[]]],[11,"init","","",107,[[]]],[11,"deref","","",107,[[]]],[11,"deref_mut","","",107,[[]]],[11,"drop","","",107,[[]]],[11,"from","","",108,[[]]],[11,"into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"vzip","","",108,[[]]],[11,"init","","",108,[[]]],[11,"deref","","",108,[[]]],[11,"deref_mut","","",108,[[]]],[11,"drop","","",108,[[]]],[11,"from","","",109,[[]]],[11,"into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"vzip","","",109,[[]]],[11,"init","","",109,[[]]],[11,"deref","","",109,[[]]],[11,"deref_mut","","",109,[[]]],[11,"drop","","",109,[[]]],[11,"from","adbfbinlib::data","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"vzip","","",80,[[]]],[11,"init","","",80,[[]]],[11,"deref","","",80,[[]]],[11,"deref_mut","","",80,[[]]],[11,"drop","","",80,[[]]],[11,"from","adbfbinlib::forwarder","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"init","","",81,[[]]],[11,"deref","","",81,[[]]],[11,"deref_mut","","",81,[[]]],[11,"drop","","",81,[[]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"init","","",82,[[]]],[11,"deref","","",82,[[]]],[11,"deref_mut","","",82,[[]]],[11,"drop","","",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"init","","",83,[[]]],[11,"deref","","",83,[[]]],[11,"deref_mut","","",83,[[]]],[11,"drop","","",83,[[]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"vzip","","",84,[[]]],[11,"init","","",84,[[]]],[11,"deref","","",84,[[]]],[11,"deref_mut","","",84,[[]]],[11,"drop","","",84,[[]]],[11,"from","adbfbinlib::net::behavior","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"vzip","","",85,[[]]],[11,"init","","",85,[[]]],[11,"deref","","",85,[[]]],[11,"deref_mut","","",85,[[]]],[11,"drop","","",85,[[]]],[11,"from","adbfbinlib::net::sm","",110,[[]]],[11,"into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"vzip","","",110,[[]]],[11,"init","","",110,[[]]],[11,"deref","","",110,[[]]],[11,"deref_mut","","",110,[[]]],[11,"drop","","",110,[[]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"vzip","","",86,[[]]],[11,"init","","",86,[[]]],[11,"deref","","",86,[[]]],[11,"deref_mut","","",86,[[]]],[11,"drop","","",86,[[]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"init","","",87,[[]]],[11,"deref","","",87,[[]]],[11,"deref_mut","","",87,[[]]],[11,"drop","","",87,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"init","","",88,[[]]],[11,"deref","","",88,[[]]],[11,"deref_mut","","",88,[[]]],[11,"drop","","",88,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"vzip","","",90,[[]]],[11,"init","","",90,[[]]],[11,"deref","","",90,[[]]],[11,"deref_mut","","",90,[[]]],[11,"drop","","",90,[[]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"vzip","","",91,[[]]],[11,"init","","",91,[[]]],[11,"deref","","",91,[[]]],[11,"deref_mut","","",91,[[]]],[11,"drop","","",91,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"equivalent","","",92,[[]]],[11,"init","","",92,[[]]],[11,"deref","","",92,[[]]],[11,"deref_mut","","",92,[[]]],[11,"drop","","",92,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"vzip","","",93,[[]]],[11,"init","","",93,[[]]],[11,"deref","","",93,[[]]],[11,"deref_mut","","",93,[[]]],[11,"drop","","",93,[[]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"vzip","","",94,[[]]],[11,"init","","",94,[[]]],[11,"deref","","",94,[[]]],[11,"deref_mut","","",94,[[]]],[11,"drop","","",94,[[]]],[11,"from","adbfbinlib::net::sm_behaviour","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"vzip","","",95,[[]]],[11,"init","","",95,[[]]],[11,"deref","","",95,[[]]],[11,"deref_mut","","",95,[[]]],[11,"drop","","",95,[[]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"vzip","","",96,[[]]],[11,"init","","",96,[[]]],[11,"deref","","",96,[[]]],[11,"deref_mut","","",96,[[]]],[11,"drop","","",96,[[]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"vzip","","",97,[[]]],[11,"init","","",97,[[]]],[11,"deref","","",97,[[]]],[11,"deref_mut","","",97,[[]]],[11,"drop","","",97,[[]]],[11,"from","adbfbinlib::net::storage","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"vzip","","",98,[[]]],[11,"init","","",98,[[]]],[11,"deref","","",98,[[]]],[11,"deref_mut","","",98,[[]]],[11,"drop","","",98,[[]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"vzip","","",99,[[]]],[11,"init","","",99,[[]]],[11,"deref","","",99,[[]]],[11,"deref_mut","","",99,[[]]],[11,"drop","","",99,[[]]],[11,"from","adbfbinlib::net::subs::key_keeper","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"vzip","","",100,[[]]],[11,"init","","",100,[[]]],[11,"deref","","",100,[[]]],[11,"deref_mut","","",100,[[]]],[11,"drop","","",100,[[]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"vzip","","",101,[[]]],[11,"init","","",101,[[]]],[11,"deref","","",101,[[]]],[11,"deref_mut","","",101,[[]]],[11,"drop","","",101,[[]]],[11,"from","adbfbinlib::net::ui_data","",102,[[]]],[11,"into","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"vzip","","",102,[[]]],[11,"init","","",102,[[]]],[11,"deref","","",102,[[]]],[11,"deref_mut","","",102,[[]]],[11,"drop","","",102,[[]]],[11,"from","adbfbinlib::net","",103,[[]]],[11,"into","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"vzip","","",103,[[]]],[11,"init","","",103,[[]]],[11,"deref","","",103,[[]]],[11,"deref_mut","","",103,[[]]],[11,"drop","","",103,[[]]],[11,"from","adbfbinlib","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"to_string","","",111,[[],["string",3]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"vzip","","",111,[[]]],[11,"init","","",111,[[]]],[11,"deref","","",111,[[]]],[11,"deref_mut","","",111,[[]]],[11,"drop","","",111,[[]]],[11,"distance","adbfbinlib::data::audio_info","",68,[[]]],[11,"read_tag_from","adbfbinlib::data::tag_readers","",106,[[["bufreader",3]],[["commonaudioinfo",3],["string",3],["result",4]]]],[11,"known_suffixes","","",106,[[],["vec",3]]],[11,"read_tag_from","","",107,[[["bufreader",3]],[["commonaudioinfo",3],["string",3],["result",4]]]],[11,"known_suffixes","","",107,[[],["vec",3]]],[11,"read_tag_from","","",108,[[["bufreader",3]],[["commonaudioinfo",3],["string",3],["result",4]]]],[11,"known_suffixes","","",108,[[],["vec",3]]],[11,"read_tag_from","","",109,[[["bufreader",3]],[["commonaudioinfo",3],["string",3],["result",4]]]],[11,"known_suffixes","","",109,[[],["vec",3]]],[11,"not_known","adbfbinlib::net::sm","",94,[[["newpeerdata",3]]]],[11,"known","","",94,[[["peerid",3]]]],[11,"is_allowed","","",94,[[["updatedata",3]]]],[11,"process_new_peer","","",94,[[["newpeerdata",3]]]],[11,"remove_peer","","",94,[[["peerid",3]]]],[11,"update_peer","","",94,[[["updatedata",3]]]],[11,"from","adbfbinlib","",111,[[["error",3]]]],[11,"clone","adbfbinlib::ctrl::tui","",31,[[],["alivestate",3]]],[11,"clone","adbfbinlib::ctrl::webui::json","",40,[[],["refreshdata",4]]],[11,"clone","","",42,[[],["animatedata",4]]],[11,"clone","","",43,[[],["pathdata",3]]],[11,"clone","","",44,[[],["startdata",3]]],[11,"clone","","",45,[[],["peerjson",3]]],[11,"clone","","",46,[[],["finishpeer",3]]],[11,"clone","","",47,[[],["netdata",4]]],[11,"clone","","",48,[[],["dirout",3]]],[11,"clone","","",49,[[],["wsjsonout",4]]],[11,"clone","","",50,[[],["dirin",3]]],[11,"clone","","",51,[[],["wsjsonin",4]]],[11,"clone","adbfbinlib::ctrl","",56,[[],["collectionpathalive",4]]],[11,"clone","","",57,[[],["status",4]]],[11,"clone","","",58,[[],["netinfomsg",4]]],[11,"clone","","",60,[[],["uiclientpeer",3]]],[11,"clone","","",61,[[],["forwardnetmsg",4]]],[11,"clone","","",63,[[],["uiupdatemsg",4]]],[11,"clone","","",64,[[],["netstatsmsg",3]]],[11,"clone","adbfbinlib::data::audio_info","",68,[[],["audioinfokey",3]]],[11,"clone","","",69,[[],["audioinfo",3]]],[11,"clone","adbfbinlib::data::ipc","",76,[[],["ifcollectionoutputdata",3]]],[11,"clone","adbfbinlib::data::tag_readers","",78,[[],["commonaudioinfo",3]]],[11,"clone","adbfbinlib::data","",80,[[],["ifinternalcollectionoutputdata",3]]],[11,"clone","adbfbinlib::forwarder","",83,[[],["uilistinner",3]]],[11,"clone","adbfbinlib::net::sm","",92,[[],["error",4]]],[11,"clone","adbfbinlib::net::sm_behaviour","",95,[[],["sm_to_net",4]]],[11,"clone","adbfbinlib::net::storage","",98,[[],["mkadkeys",4]]],[11,"clone","adbfbinlib","",111,[[],["adbfliberror",3]]],[11,"default","adbfbinlib::data::bktree","",70,[[],["bktree",3]]],[11,"eq","adbfbinlib::data::ipc","",76,[[["ifcollectionoutputdata",3]]]],[11,"ne","","",76,[[["ifcollectionoutputdata",3]]]],[11,"eq","adbfbinlib::net::sm","",110,[[["go",3]]]],[11,"eq","","",86,[[["startdata",3]]]],[11,"ne","","",86,[[["startdata",3]]]],[11,"eq","","",87,[[["newpeerdata",3]]]],[11,"ne","","",87,[[["newpeerdata",3]]]],[11,"eq","","",88,[[["updatedata",3]]]],[11,"ne","","",88,[[["updatedata",3]]]],[11,"eq","","",90,[[["states",4]]]],[11,"eq","","",91,[[["events",4]]]],[11,"ne","","",91,[[["events",4]]]],[11,"eq","","",92,[[["error",4]]]],[11,"deref","adbfbinlib::common::config::webui::jquery","",0,[[]]],[11,"deref","adbfbinlib::common::config::webui::bootstrap","",1,[[]]],[11,"deref","","",2,[[]]],[11,"deref","","",3,[[]]],[11,"deref","","",4,[[]]],[11,"deref","","",5,[[]]],[11,"deref","","",6,[[]]],[11,"deref","","",7,[[]]],[11,"deref","","",8,[[]]],[11,"deref","","",9,[[]]],[11,"deref","","",10,[[]]],[11,"deref","","",11,[[]]],[11,"deref","","",12,[[]]],[11,"deref","","",13,[[]]],[11,"deref","","",14,[[]]],[11,"deref","","",15,[[]]],[11,"deref","","",16,[[]]],[11,"deref","","",17,[[]]],[11,"deref","","",18,[[]]],[11,"deref","","",19,[[]]],[11,"deref","","",20,[[]]],[11,"deref","adbfbinlib::common::config::webui","",21,[[]]],[11,"deref","","",22,[[]]],[11,"deref","","",23,[[]]],[11,"deref","","",24,[[]]],[11,"deref","","",25,[[]]],[11,"deref","","",26,[[]]],[11,"deref","","",27,[[]]],[11,"deref","adbfbinlib::forwarder","",81,[[],["mutex",3]]],[11,"deref","","",82,[[],["mutex",3]]],[11,"deref","adbfbinlib::net::subs::key_keeper","",100,[[],["keypair",4]]],[11,"deref","","",101,[[],["presharedkey",3]]],[11,"fmt","adbfbinlib::ctrl::webui::json","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","adbfbinlib::data::audio_info","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","adbfbinlib::data::bktree","",71,[[["formatter",3]],["result",6]]],[11,"fmt","adbfbinlib::data::ipc","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","adbfbinlib::net::sm","",92,[[["formatter",3]],["result",6]]],[11,"fmt","adbfbinlib::net::sm_behaviour","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","adbfbinlib::net::storage","",98,[[["formatter",3]],["result",6]]],[11,"fmt","adbfbinlib","",111,[[["formatter",3]],["result",6]]],[11,"fmt","adbfbinlib::ctrl::webui::json","",49,[[["formatter",3]],["result",6]]],[11,"fmt","adbfbinlib","",111,[[["formatter",3]],["result",6]]],[11,"add","adbfbinlib::data","",80,[[]]],[11,"initialize","adbfbinlib::common::config::webui::jquery","",0,[[]]],[11,"initialize","adbfbinlib::common::config::webui::bootstrap","",1,[[]]],[11,"initialize","","",2,[[]]],[11,"initialize","","",3,[[]]],[11,"initialize","","",4,[[]]],[11,"initialize","","",5,[[]]],[11,"initialize","","",6,[[]]],[11,"initialize","","",7,[[]]],[11,"initialize","","",8,[[]]],[11,"initialize","","",9,[[]]],[11,"initialize","","",10,[[]]],[11,"initialize","","",11,[[]]],[11,"initialize","","",12,[[]]],[11,"initialize","","",13,[[]]],[11,"initialize","","",14,[[]]],[11,"initialize","","",15,[[]]],[11,"initialize","","",16,[[]]],[11,"initialize","","",17,[[]]],[11,"initialize","","",18,[[]]],[11,"initialize","","",19,[[]]],[11,"initialize","","",20,[[]]],[11,"initialize","adbfbinlib::common::config::webui","",21,[[]]],[11,"initialize","","",22,[[]]],[11,"initialize","","",23,[[]]],[11,"initialize","","",24,[[]]],[11,"initialize","","",25,[[]]],[11,"initialize","","",26,[[]]],[11,"initialize","","",27,[[]]],[11,"initialize","adbfbinlib::forwarder","",81,[[]]],[11,"initialize","","",82,[[]]],[11,"initialize","adbfbinlib::net::subs::key_keeper","",100,[[]]],[11,"initialize","","",101,[[]]],[11,"replace_append","adbfbinlib::ctrl::webui::pages","",53,[[["captures",3],["string",3]]]],[11,"started","adbfbinlib::ctrl::webui::actors","",35,[[]]],[11,"stopped","","",35,[[]]],[11,"started","","starts, and also starts a reoccurring interval check on …",38,[[]]],[11,"started","","Method is called on actor start. We start the heartbeat …",39,[[]]],[11,"stopped","","",39,[[]]],[11,"handle","","",35,[[["msyncstartup",3],["context",3]]]],[11,"handle","","",38,[[["mregisterwsclient",3],["context",3]]]],[11,"handle","","",38,[[["mdonesyncstartup",3],["context",3]]]],[11,"handle","","",39,[[["mserverevent",3]]]],[11,"handle","","Handler for <code>ws::Message</code>    ",39,[[["result",4],["message",4],["protocolerror",4]]]],[11,"serialize","adbfbinlib::ctrl::webui::json","",40,[[],["result",4]]],[11,"serialize","","",42,[[],["result",4]]],[11,"serialize","","",43,[[],["result",4]]],[11,"serialize","","",44,[[],["result",4]]],[11,"serialize","","",45,[[],["result",4]]],[11,"serialize","","",46,[[],["result",4]]],[11,"serialize","","",47,[[],["result",4]]],[11,"serialize","","",48,[[],["result",4]]],[11,"serialize","","",49,[[],["result",4]]],[11,"serialize","","",50,[[],["result",4]]],[11,"serialize","","",51,[[],["result",4]]],[11,"serialize","adbfbinlib::ctrl","",56,[[],["result",4]]],[11,"serialize","","",57,[[],["result",4]]],[11,"serialize","adbfbinlib::data::audio_info","",68,[[],["result",4]]],[11,"serialize","","",69,[[],["result",4]]],[11,"serialize","adbfbinlib::data::ipc","",76,[[],["result",4]]],[11,"serialize","","",77,[[],["result",4]]],[11,"serialize","adbfbinlib::forwarder","",83,[[],["result",4]]],[11,"serialize","adbfbinlib::net::sm_behaviour","",95,[[],["result",4]]],[11,"serialize","","",96,[[],["result",4]]],[11,"serialize","adbfbinlib::net::storage","",98,[[],["result",4]]],[11,"deserialize","adbfbinlib::ctrl::webui::json","",40,[[],["result",4]]],[11,"deserialize","","",42,[[],["result",4]]],[11,"deserialize","","",43,[[],["result",4]]],[11,"deserialize","","",44,[[],["result",4]]],[11,"deserialize","","",45,[[],["result",4]]],[11,"deserialize","","",46,[[],["result",4]]],[11,"deserialize","","",47,[[],["result",4]]],[11,"deserialize","","",48,[[],["result",4]]],[11,"deserialize","","",49,[[],["result",4]]],[11,"deserialize","","",50,[[],["result",4]]],[11,"deserialize","","",51,[[],["result",4]]],[11,"deserialize","adbfbinlib::ctrl","",56,[[],["result",4]]],[11,"deserialize","adbfbinlib::data::audio_info","",68,[[],["result",4]]],[11,"deserialize","","",69,[[],["result",4]]],[11,"deserialize","adbfbinlib::data::ipc","",76,[[],["result",4]]],[11,"deserialize","","",77,[[],["result",4]]],[11,"deserialize","adbfbinlib::forwarder","",83,[[],["result",4]]],[11,"deserialize","adbfbinlib::net::sm_behaviour","",95,[[],["result",4]]],[11,"deserialize","","",96,[[],["result",4]]],[11,"deserialize","adbfbinlib::net::storage","",98,[[],["result",4]]],[11,"new_handler","adbfbinlib::net::behavior","",85,[[]]],[11,"addresses_of_peer","","",85,[[["peerid",3]],[["multiaddr",3],["vec",3]]]],[11,"inject_connected","","",85,[[["peerid",3]]]],[11,"inject_disconnected","","",85,[[["peerid",3]]]],[11,"inject_connection_established","","",85,[[["connectionid",3],["connectedpoint",4],["peerid",3]]]],[11,"inject_address_change","","",85,[[["connectionid",3],["connectedpoint",4],["peerid",3]]]],[11,"inject_connection_closed","","",85,[[["connectionid",3],["connectedpoint",4],["peerid",3]]]],[11,"inject_addr_reach_failure","","",85,[[["multiaddr",3],["peerid",3],["option",4],["error",8]]]],[11,"inject_dial_failure","","",85,[[["peerid",3]]]],[11,"inject_new_listen_addr","","",85,[[["multiaddr",3]]]],[11,"inject_expired_listen_addr","","",85,[[["multiaddr",3]]]],[11,"inject_new_external_addr","","",85,[[["multiaddr",3]]]],[11,"inject_listener_error","","",85,[[["error",8],["listenerid",3]]]],[11,"inject_listener_closed","","",85,[[["error",3],["result",4],["listenerid",3]]]],[11,"inject_event","","",85,[[["peerid",3],["connectionid",3]]]],[11,"poll","","",85,[[["context",3]],[["networkbehaviouraction",4],["poll",4]]]],[11,"new_handler","adbfbinlib::net::sm_behaviour","",97,[[]]],[11,"addresses_of_peer","","",97,[[["peerid",3]],[["multiaddr",3],["vec",3]]]],[11,"inject_connected","","",97,[[["peerid",3]]]],[11,"inject_disconnected","","",97,[[["peerid",3]]]],[11,"inject_connection_established","","",97,[[["connectedpoint",4],["peerid",3],["connectionid",3]]]],[11,"inject_connection_closed","","",97,[[["connectedpoint",4],["peerid",3],["connectionid",3]]]],[11,"inject_event","","",97,[[["peerid",3],["connectionid",3]]]],[11,"poll","","",97,[[["context",3]],[["poll",4],["networkbehaviouraction",4]]]],[11,"inject_event","adbfbinlib::net::behavior","",85,[[["mdnsevent",4]]]],[11,"inject_event","","",85,[[["kademliaevent",4]]]],[11,"inject_event","","",85,[[["smoutevents",4]]]]],"p":[[3,"JS_JQUERY"],[3,"JS"],[3,"JS_MAP"],[3,"JS_MIN"],[3,"JS_MIN_MAP"],[3,"JS_BUNDLE"],[3,"JS_BUNDLE_MAP"],[3,"JS_BUNDLE_MIN"],[3,"JS_BUNDLE_MIN_MAP"],[3,"CSS"],[3,"CSS_MAP"],[3,"CSS_MIN"],[3,"CSS_MIN_MAP"],[3,"CSS_GRID"],[3,"CSS_GRID_MAP"],[3,"CSS_GRID_MIN"],[3,"CSS_GRID_MIN_MAP"],[3,"CSS_REBOOT"],[3,"CSS_REBOOT_MAP"],[3,"CSS_REBOOT_MIN"],[3,"CSS_REBOOT_MIN_MAP"],[3,"HTML_PAGE"],[3,"PEER_PAGE"],[3,"JS_APP"],[3,"JS_WS_EVENT_DISPATCHER"],[3,"FAVICON"],[3,"PIC_SHEEP"],[3,"LICENSES"],[4,"Log"],[3,"Logit"],[3,"SearchPath"],[3,"AliveState"],[3,"AliveDisplayData"],[4,"AliveSym"],[3,"Tui"],[3,"ActorSyncStartup"],[3,"MRegisterWSClient"],[3,"MServerEvent"],[3,"ActorWSServerMonitor"],[3,"ActorWebSocket"],[4,"RefreshData"],[13,"path"],[4,"AnimateData"],[3,"PathData"],[3,"StartData"],[3,"PeerJson"],[3,"FinishPeer"],[4,"NetData"],[3,"DirOut"],[4,"WSJsonOut"],[3,"DirIn"],[4,"WSJsonIn"],[3,"ReplaceStatic"],[3,"HTMLReplacer"],[3,"WebServerState"],[3,"WebUI"],[4,"CollectionPathAlive"],[4,"Status"],[4,"NetInfoMsg"],[13,"ShowStats"],[3,"UiClientPeer"],[4,"ForwardNetMsg"],[4,"InternalUiMsg"],[4,"UiUpdateMsg"],[3,"NetStatsMsg"],[4,"Finisher"],[3,"Ctrl"],[3,"Container"],[3,"AudioInfoKey"],[3,"AudioInfo"],[3,"BKTree"],[3,"BKTreeNode"],[8,"Distance"],[3,"Collection"],[3,"FilesStat"],[3,"Stats"],[3,"IFCollectionOutputData"],[4,"IPC"],[3,"CommonAudioInfo"],[8,"TagReader"],[3,"IFInternalCollectionOutputData"],[3,"NET_RUNTIME"],[3,"NET_UI"],[3,"UIListInner"],[3,"UIList"],[3,"AdbfBehavior"],[3,"StartData"],[3,"NewPeerData"],[3,"UpdateData"],[8,"StateMachineContext"],[4,"States"],[4,"Events"],[4,"Error"],[3,"StateMachine"],[3,"AdbfStateChart"],[4,"sm_to_net"],[4,"SMOutEvents"],[3,"SMBehaviour"],[4,"MkadKeys"],[3,"NetStorage"],[3,"SERVER_KEY"],[3,"PRESHARED_SECRET"],[3,"UiData"],[3,"Net"],[3,"MSyncStartup"],[3,"MDoneSyncStartup"],[3,"MP4TagReader"],[3,"ID3TagReader"],[3,"FlacTagReader"],[3,"MP3TagReader"],[3,"Go"],[3,"AdbflibError"]]},\
"audiobookfinder":{"doc":"A simple first program in rust, actually I plan to do …","i":[[0,"command_line","audiobookfinder","Command line modules: has one function which takes input …",null,null],[7,"APP_TITLE","audiobookfinder::command_line","",null,null],[7,"ARG_NET","","",null,null],[7,"ARG_TUI","","",null,null],[7,"ARG_WEBUI","","",null,null],[7,"ARG_KEEP_ALIVE","","",null,null],[7,"ARG_BROWSER","","",null,null],[7,"ARG_BROWSER_PORT","","",null,null],[7,"INPUT_FOLDERS","","",null,null],[17,"AUTHORS","","",null,null],[17,"DESCRIPTION","","",null,null],[5,"get_start_values","","Get all start values which are passed from command line",null,[[]]],[5,"main","audiobookfinder","The main application which is central part of …",null,[[],["result",6]]]],"p":[]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);