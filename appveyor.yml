version: "{build}"

image:
- Ubuntu2004
- Visual Studio 2017
- Ubuntu1804

environment:
  global:
    CRATE_NAME: audiobookfinder
  matrix:
# don't use "configuration" variable in this file!!!
    - target: x86_64-unknown-linux-gnu
      UBUNTU_VER: LTS_18.04
      ARCH: amd64
      type: Release
      CHANNEL: stable
      platform: x64
    - target: x86_64-unknown-linux-gnu
      UBUNTU_VER: LTS_20.04
      ARCH: amd64
      type: Release
      CHANNEL: stable
      platform: x64
    - target: x86_64-pc-windows-msvc
      ARCH: amd64
      type: Release
      CHANNEL: stable
      platform: x64
      # versions for libs
      LIBSODIUM_WIN_VER: 1.0.17
      TAGLIB_WIN_VER: 2.1.0


matrix:
  exclude:
    - image: Visual Studio 2017
      target: x86_64-unknown-linux-gnu
    - image: Ubuntu1804
      target: x86_64-pc-windows-msvc
    - image: Ubuntu2004
      target: x86_64-pc-windows-msvc
    - image: Ubuntu1804
      UBUNTU_VER: LTS_20.04
    - image: Ubuntu2004
      UBUNTU_VER: LTS_18.04


#  allow_failures:
#    - target: x86_64-pc-windows-msvc

# build configuration, i.e. Debug, Release, etc.

cache:
  - '.cargo'

# scripts that are called at very beginning, before repo cloning
# ACCEPT_EULA for some windows packages .. whatever
init:
  - sh: sudo apt-get update
# comment next line for quick build
#  - sh: sudo DEBIAN_FRONTEND=noninteractive ACCEPT_EULA=Y apt-get upgrade -yq
  - sh: sudo apt-get --yes install build-essential
#  - sh: sudo apt-get --yes install libsodium-dev
#  for deployment
  - sh: sudo apt-get --yes install p7zip-full # upx-ucl is now in install

# scripts that run after cloning repository
install:
  #
  # shell: Linux
  #
  # IMPORTANT: yet 3.96 somehow errors on LTS20 build, 3.95 NOT!! This is why 3.95 is used here
  - sh: curl -L https://github.com/upx/upx/releases/download/v3.95/upx-3.95-amd64_linux.tar.xz > upx.xz
  - sh: tar -xf ./upx.xz upx-3.95-amd64_linux/upx --strip-components=1 -C .
  - sh: ./upx --version
  - sh: echo $CRATE_NAME-$target-$APPVEYOR_REPO_TAG_NAME
  - sh: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > ./rustup.sh
  - sh: sh ./rustup.sh -y 
# for debugging: ls -al
  - sh: source $HOME/.cargo/env
# it's a clean install so not needed: rustup update
# comment next line for quick build
#  - sh: rustup toolchain install nightly
  - sh: rustup target install $target
  #
  # cmd (powershell should only be triggered with windows build)
  #
  # trying NuGet and powershell for lib installation
  - cmd: appveyor DownloadFile https://dist.nuget.org/win-x86-commandline/latest/nuget.exe
#  - cmd: nuget install libsodium -Version %LIBSODIUM_WIN_VER%
#  - cmd: set SODIUM_LIB_DIR=%ProgramFiles(x86)%\Microsoft SDKs\NuGetPackages\libsodium\runtimes\win-x64\native
#  - cmd: set SODIUM_STATIC=1
  - cmd: nuget locals all -list
  # upx for windows
  - cmd: appveyor DownloadFile https://github.com/upx/upx/releases/download/v3.96/upx-3.96-win64.zip
  - cmd: 7z e upx-3.96-win64.zip upx-3.96-win64\upx.exe
  - cmd: upx.exe --version
  - cmd: echo "%CRATE_NAME%-%target%-%APPVEYOR_REPO_TAG_NAME%"
  # old way test download https://libsodium.gitbook.io/doc/installation
  #- cmd: appveyor-retry appveyor DownloadFile https://download.libsodium.org/libsodium/releases/libsodium-%LIBSODIUM_WIN_VER%-stable-msvc.zip -FileName libsodium.7z 
  #- cmd: 7z x -y libsodium.7z -oC:\build_libs\libsodium
  - cmd: curl -sSf -o rustup-init.exe https://win.rustup.rs
  - cmd: rustup-init.exe --default-host %target% --default-toolchain %CHANNEL% -y
  - cmd: set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - cmd: del rustup-init.exe
  - cmd: rustc -Vv
  - cmd: rustup target install %target%  
  - cmd: cargo -V  

build_script:
# comment next line for quick build
#  - cargo build
  - sh: cargo build --bin $CRATE_NAME --release --target $target
  - cmd: cargo build --bin %CRATE_NAME% --release --target %target%

test_script:
  - sh: cargo test
  - cmd: cargo test
  - sh: ./target/$target/release/$CRATE_NAME -- testaudio
  - cmd: target\%target%\release\%CRATE_NAME%.exe -- testaudio

after_build:
  - sh: cp target/$target/release/$CRATE_NAME target/release/$CRATE_NAME-$UBUNTU_VER-$target
  - sh: strip -s target/release/$CRATE_NAME-$UBUNTU_VER-$target -o target/release/$CRATE_NAME-$UBUNTU_VER-$target.stripped
  - sh: ./upx --best target/release/$CRATE_NAME-$UBUNTU_VER-$target.stripped -o target/release/$CRATE_NAME
  - sh: 7z a -r $CRATE_NAME-$UBUNTU_VER-$target-$APPVEYOR_REPO_TAG_NAME.7z ./target/release/$CRATE_NAME ./README-release.md ./LICENSE
  - sh: sha256sum $CRATE_NAME-$UBUNTU_VER-$target-$APPVEYOR_REPO_TAG_NAME.7z > $CRATE_NAME-$UBUNTU_VER-$target-$APPVEYOR_REPO_TAG_NAME.7z.sha256
# windows
  - cmd: copy "target\%target%\release\%CRATE_NAME%.exe" "target\release\%CRATE_NAME%-%target%-orig.exe"
  - cmd: upx --best "target\release\%CRATE_NAME%-%target%-orig.exe" -o "target\release\%CRATE_NAME%.exe"
  - cmd: 7z a -r "%CRATE_NAME%-%target%-%APPVEYOR_REPO_TAG_NAME%.7z" ".\target\release\%CRATE_NAME%.exe" ".\README-release.md" ".\LICENSE"
  - cmd: certUtil -hashfile "%CRATE_NAME%-%target%-%APPVEYOR_REPO_TAG_NAME%.7z" SHA256 > "%CRATE_NAME%-%target%-%APPVEYOR_REPO_TAG_NAME%.7z.sha256"

#test_script:
# comment next lines for quick build  
#  - sh: cargo run --release --target $target -- testaudio
#  - sh: cargo test --release --target $target
#  - sh: ./target/$target/release/$CRATE_NAME -- testaudio

artifacts:
  - path: "%CRATE_NAME%-%target%-%APPVEYOR_REPO_TAG_NAME%.7z"
    name: windowsBuild
  - path: "%CRATE_NAME%-%target%-%APPVEYOR_REPO_TAG_NAME%.7z.sha256"
    name: windowsSha
  - path: $CRATE_NAME-$UBUNTU_VER-$target-$APPVEYOR_REPO_TAG_NAME.7z
    name: linuxBuild
  - path: $CRATE_NAME-$UBUNTU_VER-$target-$APPVEYOR_REPO_TAG_NAME.7z.sha256
    name: linuxSha

deploy:
# due to mutually exclusive branch and tagged (https://www.appveyor.com/docs/branches/)
# 2 provider sections would be needed to have tagged and branch release, would be needed
# but branch is not important since until now, only master is used
  provider: GitHub
  tag: $(APPVEYOR_REPO_TAG_NAME)
  auth_token:
    # yes this is encrypted/signed by appveyor (from the github token)
    secure: r7fSlUlYmQ1WCJeuTZu8XnQ0n5QNvWb+eVX5lsowCbA9gLlq3DtIFiTSjXTXjs6V
  draft: false
  prerelease: false
  force_update: true
  on:
    # branch: master
    # something very wrong with tag "v0.1.19" it claims
    # says: "GitHub" deployment for branch "master" has been skipped because current branch is "v0.1.19"
    APPVEYOR_REPO_TAG: true       # deploy on tag push only


# don't build on travis configuration changes
skip_commits:
  files:
    - ci/
    - docs/
    - .travis.yml
    - README.md
    - README-release.md
