version: "{build}"

image:
- Visual Studio 2017
- Ubuntu1804

environment:
  global:
    CRATE_NAME: audiobookfinder
    UBUNTU_VER: LTS_18.04
    LIBSODIUM_VER: 1.0.17
  matrix:
#    - ARCH: arm
#    - ARCH: arm64
    - TARGET: x86_64-unknown-linux-gnu
      ARCH: amd64
      configuration: Release
      CHANNEL: stable
      platform: x64
    - TARGET: x86_64-pc-windows-msvc
      ARCH: amd64
      configuration: Release
      CHANNEL: stable
      platform: x64


matrix:
  exclude:
    - image: Visual Studio 2017
      TARGET: x86_64-unknown-linux-gnu
    - image: Ubuntu1804
      TARGET: x86_64-pc-windows-msvc

# build configuration, i.e. Debug, Release, etc.

cache:
  - '.cargo'

# scripts that are called at very beginning, before repo cloning
# ACCEPT_EULA for some windows packages .. whatever
init:
  - sh: sudo apt-get update
# comment next line for quick build
#  - sh: sudo DEBIAN_FRONTEND=noninteractive ACCEPT_EULA=Y apt-get upgrade -yq
  - sh: sudo apt-get --yes install build-essential
  - sh: sudo apt-get --yes install libavahi-compat-libdnssd-dev
  - sh: sudo apt-get --yes install libsodium-dev
  - sh: sudo apt-get --yes install libtag1-dev libtagc0-dev
#  for deployment
  - sh: sudo apt-get --yes install p7zip-full upx-ucl
  # trying NuGet and powershell for lib installation
  - cmd: IF NOT EXIST %APPVEYOR_BUILD_FOLDER%\..\build MKDIR -p %APPVEYOR_BUILD_FOLDER%\..\build
  - cmd: cd %APPVEYOR_BUILD_FOLDER%\..\build
  - cmd: appveyor DownloadFile https://dist.nuget.org/win-x86-commandline/latest/nuget.exe
  - cmd: nuget install taglib -Version 2.1.0
  - cmd: nuget install libsodium -Version %LIBSODIUM_VER%
   # old way test download https://libsodium.gitbook.io/doc/installation  
  #- cmd: appveyor-retry appveyor DownloadFile https://download.libsodium.org/libsodium/releases/libsodium-%LIBSODIUM_VER%-stable-msvc.zip -FileName libsodium.7z 
  #- cmd: 7z x -y libsodium.7z -oC:\build_libs\libsodium

# scripts that run after cloning repository
install:
  #
  # shell: Linux
  #
  - sh: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > ./rustup.sh
  - sh: sh ./rustup.sh -y 
# for debugging: ls -al
  - sh: source $HOME/.cargo/env
# it's a clean install so not needed: rustup update
# comment next line for quick build
#  - sh: rustup toolchain install nightly
  - sh: rustup target install $TARGET
  - sh: rustup component add rustc --toolchain $TARGET
  #
  # cmd (powershell should only be triggered with windows build)
  #
  - cmd: curl -sSf -o rustup-init.exe https://win.rustup.rs
  - cmd: rustup-init.exe --default-host %TARGET% --default-toolchain %CHANNEL% -y
  - cmd: set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - cmd: del rustup-init.exe
  - cmd: rustc -Vv
  - cmd: rustup target install %TARGET%  
  - cmd: cargo -V  

build_script:
# comment next line for quick build
#  - cargo build
  - sh: cargo build --release --target $TARGET  
  - cmd: cargo build --release --target %TARGET%

test_script:
# comment next lines for quick build  
#  - sh: cargo run --release --target $TARGET -- testaudio
#  - sh: cargo test --release --target $TARGET
  - sh: ./target/$TARGET/release/$CRATE_NAME -- testaudio  

artifacts:
  - path: target/release/$CRATE_NAME-$UBUNTU_VER-$TARGET.7z
    name: zippedFiles

  - path: target/release/$CRATE_NAME-$UBUNTU_VER-$TARGET.7z.sha1
    name: sha1checksum


after_build:
  - sh: cp target/$TARGET/release/$CRATE_NAME target/release/$CRATE_NAME-$UBUNTU_VER-$TARGET
  - sh: strip -s target/release/$CRATE_NAME-$UBUNTU_VER-$TARGET -o target/release/$CRATE_NAME
  # upx yet disabled since causes segmentation faults
  #- strip -s target/release/$CRATE_NAME-$UBUNTU_VER-$TARGET \
  #        -o target/release/$CRATE_NAME.stripped
  #- upx --ultra-brute target/release/$CRATE_NAME.stripped \
  #       -o target/release/$CRATE_NAME
  - sh: 7z a -r target/release/$CRATE_NAME-$UBUNTU_VER-$TARGET.7z ./target/release/$CRATE_NAME ./README-release.md ./LICENSE
  - sh: sha1sum target/release/$CRATE_NAME-$UBUNTU_VER-$TARGET.7z > target/release/$CRATE_NAME-$UBUNTU_VER-$TARGET.7z.sha1

deploy:
  provider: GitHub
  artifact: 
    -'zippedFiles'
    -'sha1checksum'
  auth_token:
    # yes this is encrypted/signed by appveyor (from the github token)
    secure: aT3Xjbg4GSAJtYjhk7SrC1RInLV28rI6e64he6JClx2W09nToXvPyHr/zXc0tqPj
  draft: false
  prerelease: false
  on:
    branch: master                # release from master branch only
    APPVEYOR_REPO_TAG: true       # deploy on tag push only
    target: x86_64-unknown-linux-gnu
